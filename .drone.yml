---
kind: pipeline
type: docker
name: build

steps:
  - name: build-frontend
    image: node:22-alpine
    commands:
      - cd client
      - npm ci --include=dev
      - npm run build

  - name: build-backend
    image: golang:1.24.3-alpine
    commands:
      - apk add --no-cache gcc musl-dev
      - cd server
      - go mod download
      - CGO_ENABLED=1 GOOS=linux go build -ldflags="-w -s" -o main cmd/api/main.go

  - name: build-server-image
    image: docker:24-cli
    commands:
      - cd server
      - docker build -t vim-server:latest .
    depends_on:
      - build-backend

  - name: build-client-image
    image: docker:24-cli
    commands:
      - cd client
      - docker build -t vim-client:latest .
    depends_on:
      - build-frontend

---
kind: pipeline
type: docker
name: deploy

steps:
  - name: deploy
    image: docker/compose:alpine-1.29.2
    environment:
      CORS_ALLOW_ORIGINS:
        from_secret: CORS_ALLOW_ORIGINS
      SECURITY_SALT:
        from_secret: SECURITY_SALT
      SECURITY_PEPPER:
        from_secret: SECURITY_PEPPER
      SECURITY_JWT_SECRET:
        from_secret: SECURITY_JWT_SECRET
    commands:
      - docker-compose down || true
      - docker network create traefik || true
      - docker-compose up -d
      - docker image prune -f
    when:
      branch:
        - main
      event:
        - push

depends_on:
  - build